// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// TODO: Figure out why there is an error with enabling the vector

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DEV_DATABASE_URL")
  extensions = [vector]
}

model User {
  id           Int      @id @default(autoincrement())
  fullname     String
  username     String   @unique
  email        String   @unique
  passwordhash String?
  resumes      Resume[]

  Feedback       Feedback[]
  JobDescription JobDescription[]
}

model Resume {
  id       Int        @id @default(autoincrement())
  date     DateTime   @default(now())
  userid   Int
  user     User       @relation(fields: [userid], references: [id])
  feedback Feedback[]

  embedding Unsupported("vector(1536)")?

  rawtext String

  name          String
  cloudlink     String
  cloudpublicid String
  mimetype      String?
  size          Decimal

  @@index([userid])
}

model Feedback {
  id       Int      @id @default(autoincrement())
  date     DateTime @default(now())
  User     User?    @relation(fields: [userId], references: [id])
  userId   Int?
  Resume   Resume?  @relation(fields: [resumeId], references: [id])
  resumeId Int?

  jobId Int?
  job   JobDescription? @relation(fields: [jobId], references: [id])

  name  String
  text  String
  score Float

  @@index([userId])
  @@index([resumeId])
  @@index([jobId])
}

model JobDescription {
  id        Int                          @id @default(autoincrement())
  title     String
  content   String
  created   DateTime                     @default(now())
  embedding Unsupported("vector(1536)")?
  userId    Int
  user      User                         @relation(fields: [userId], references: [id])
  Feedback  Feedback[]
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}
